name: CMake Build

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install dependencies on Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libopenal-dev libvorbis-dev libflac-dev xorg-dev


      - name: Configure with CMake
        run: cmake -B build -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: cmake --build build --config Release


      - name: Package on Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          # Prepare
          rm -rf package
          mkdir -p package/bin
          # Copy binary + resources
          cp -R res        package/
          cp build/glowbox package/bin/

      - name: Package on Windows
        if: matrix.os == 'windows-latest'
        shell: powershell
        run: |
          # Prepare
          Remove-Item -Recurse -Force package -ErrorAction Ignore
          New-Item -ItemType Directory -Force -Path package\bin | Out-Null
          # Copy binary + resources
          Copy-Item -Path res                 -Destination package -Recurse
          Copy-Item -Path build\Release\*.exe -Destination package\bin


      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-package
          path: package
